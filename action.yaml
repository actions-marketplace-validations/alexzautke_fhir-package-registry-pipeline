name: Release-FHIR-Package-To-Registry (GitHub Actions)
description: Release a FHIR Package to a package regsitry as part of a GitHub Actions pipeline

inputs:
  SIMPLIFIER_USERNAME:
    description: 'Simplifier email address (not username), needed for running Quality Control checks. Please use GitHub Secrets for this variable.'
    required: true
  SIMPLIFIER_PASSWORD:
    description: 'Simplifier password, needed for running Quality Control checks. Please use GitHub Secrets for this variable.'
    required: true
  PACKAGE_FEED_REPO_PATH:
   description: 'Relative path to the package feed repository, repository will be used to extract the package feed and store the FHIR package itself'
   required: true
  PATH_TO_CONFORMANCE_RESOURCES:
   description: 'Relative path to folder with conformance resources incl. package.json'
   required: true
  

runs:
  using: "composite"
  steps:
  
    # --------------------------------------------------------------------------------------------------- #
    #                                GENERATE PACKAGE USING FIRELY TERMINAL                               #
    # --------------------------------------------------------------------------------------------------- #
    
    - name: Check if .NET is installed
      run: |
        if ! command -v dotnet &> /dev/null
          then
            echo "dotnet could not be found. Please see actions/setup-dotnet to set it up before running this action."
            exit 1
        fi
      shell: bash
      
    # Test .NET SDK version
    - name: Check .NET SDK Version
      run: |
        CHECK_DOTNET_VERSION=$(dotnet --version)
        echo "DOTNET_VERSION: $CHECK_DOTNET_VERSION"
      shell: bash
      
    # Install Firely.Terminal
    - name: Install Firely.Terminal
      run: |
        dotnet tool install --global Firely.Terminal --version $FIRELY_TERMINAL_VERSION > /dev/null
      shell: bash
      env:
       FIRELY_TERMINAL_VERSION: 2.5.0-beta-7
       
    # Test Firely.Terminal install
    - name: Check Firely Terminal Version
      run: |
        CHECK_FIRELY_TERMINAL_VERSION=$(fhir -v | tr '\n' ' ') # Print everything in a single line
        echo "FIRELY_TERMINAL_VERSION: $CHECK_FIRELY_TERMINAL_VERSION"
      shell: bash
      
    # Simplifier Login
    - name: Simplifier login
      run: |
        fhir login email=$INPUT_SIMPLIFIER_USERNAME password=$INPUT_SIMPLIFIER_PASSWORD
      shell: bash
      env:
       INPUT_SIMPLIFIER_USERNAME: ${{ inputs.SIMPLIFIER_USERNAME }}
       INPUT_SIMPLIFIER_PASSWORD: ${{ inputs.SIMPLIFIER_PASSWORD }}

    # Create FHIR package
    - name: Create FHIR package
      run: |
        cd $PATH_TO_CONFORMANCE_RESOURCES
        for requiredElementPackageJson in "name" "version" "description" "author"
        do
          requiredElementFound=$(jq .$requiredElementPackageJson package.json)
          if [[ $requiredElementFound = null ]]; then
            echo ".$requiredElementPackageJson must be present in package.json"
            exit 1
          fi
        done
        fhir pack
        cd ..
      shell: bash
      env:
        PATH_TO_CONFORMANCE_RESOURCES: ${{ inputs.PATH_TO_CONFORMANCE_RESOURCES }}
      
    # Copy FHIR package to package feed repository
    - name: Copy FHIR package to package feed repository 
      run: |
        for packageFile in $PATH_TO_CONFORMANCE_RESOURCES/*.tgz; 
        do
          packageName=$(basename $PATH_TO_CONFORMANCE_RESOURCES/$packageFile .tgz)
          mkdir -p "$PACKAGE_FEED_REPO_PATH/packages/$packageName/"
          cp $PATH_TO_CONFORMANCE_RESOURCES/$packageName.tgz $PACKAGE_FEED_REPO_PATH/packages/$packageName/
          
          echo "DIR: $PACKAGE_FEED_REPO_PATH/packages/"
          cd $PACKAGE_FEED_REPO_PATH/packages/
          ls
          
          echo "DIR: $PACKAGE_FEED_REPO_PATH/packages/$packageName/"
          cd $PACKAGE_FEED_REPO_PATH/packages/$packageName/
          ls
          
        done
      shell: bash
      env:
        PACKAGE_FEED_REPO_PATH: ${{ inputs.PACKAGE_FEED_REPO_PATH }}
        PATH_TO_CONFORMANCE_RESOURCES: ${{ inputs.PATH_TO_CONFORMANCE_RESOURCES }}
